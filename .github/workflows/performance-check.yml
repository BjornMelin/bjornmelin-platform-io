name: Performance Check

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'

jobs:
  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build
        env:
          NEXT_PUBLIC_BASE_URL: http://localhost:3000
          NODE_ENV: production

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: ./.github/lighthouse/lighthouserc.json

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const results = require('./lighthouse-results.json');
            const comment = `## ðŸš¦ Lighthouse Performance Report
            
            | Metric | Score |
            |--------|-------|
            | Performance | ${results.performance}% |
            | Accessibility | ${results.accessibility}% |
            | Best Practices | ${results.bestPractices}% |
            | SEO | ${results.seo}% |
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  bundle-size:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and analyze bundle
        run: |
          pnpm build
          
          # Calculate bundle sizes
          echo "## Bundle Size Report" > bundle-report.md
          echo "" >> bundle-report.md
          echo "| File | Size | Gzipped |" >> bundle-report.md
          echo "|------|------|---------|" >> bundle-report.md
          
          # Find and measure JS bundles
          find .next/static/chunks -name "*.js" -type f | while read file; do
            size=$(du -h "$file" | cut -f1)
            gzipped=$(gzip -c "$file" | wc -c | numfmt --to=iec)
            filename=$(basename "$file")
            echo "| $filename | $size | $gzipped |" >> bundle-report.md
          done

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: |
            bundle-report.md
            .next/analyze/
          retention-days: 30